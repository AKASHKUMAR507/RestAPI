let express,loginController,registerController,userController,refreshController,productController,auth,admin;_1c9‍.x([["default",()=>_1c9‍.o]]);_1c9‍.w("express",[["default",["express"],function(v){express=v}]]);_1c9‍.w("../controllers",[["loginController",["loginController"],function(v){loginController=v}],["registerController",["registerController"],function(v){registerController=v}],["userController",["userController"],function(v){userController=v}],["refreshController",["refreshController"],function(v){refreshController=v}],["productController",["productController"],function(v){productController=v}]]);_1c9‍.w("../middlewares/auth",[["default",["auth"],function(v){auth=v}]]);_1c9‍.w("../middlewares/admin",[["default",["admin"],function(v){admin=v}]]);




const router = express.Router()

router.post('/register', registerController.register);
router.post('/login', loginController.login);
router.get('/me', auth, userController.me);
router.post('/refresh', refreshController.refresh);
router.post('/logout', auth, loginController.logout);
router.post('/products', [auth, admin], productController.store);
router.put('/products/:id',[auth, admin], productController.update);
router.delete('/products/:id',[auth, admin], productController.destroy);
router.get('/products', productController.index);

_1c9‍.d(router);