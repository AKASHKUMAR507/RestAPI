let CustomErrorHandler,JwtService;_f9c‍.x([["default",()=>_f9c‍.o]]);_f9c‍.w("../services/CustomErrorHandler",[["default",["CustomErrorHandler"],function(v){CustomErrorHandler=v}]]);_f9c‍.w("../services/JwtServices",[["default",["JwtService"],function(v){JwtService=v}]]);


const auth = async (req, res, next) => {
    let authHeader = req.headers.authorization;

    if (!authHeader) {
        return next(CustomErrorHandler.unAuthorized());
    }

    const token = authHeader.split(' ')[1];

    try {
        const { _id, role } = await JwtService.verify(token);

        const user = { _id, role }
        req.user = user
        // req.user.role = role
        
        next();

    } catch (error) {
        return next(CustomErrorHandler.unAuthorized())
    }
}


_f9c‍.d(auth);